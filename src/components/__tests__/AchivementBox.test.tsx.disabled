// FILE: src/components/AchivementBox.test.tsx

import React from "react";
import { render } from "@testing-library/react-native";
import AchivementBox from "../AchivementBox";

jest.mock("../../../assets/icons/bookmarks/holder.svg", () => "HolderV");
jest.mock("../../../assets/icons/bookmarks/holderH.svg", () => "HolderH");

describe("AchivementBox Component", () => {
  it("renders correctly with vertical layout", () => {
    const { getByText } = render(
      <AchivementBox
        title="Achievement Title"
        description="Achievement Description"
      />
    );
    expect(getByText("Achievement Title")).toBeTruthy();
    expect(getByText("Achievement Description")).toBeTruthy();
  });

  it("renders correctly with horizontal layout", () => {
    const { getByText } = render(
      <AchivementBox
        title="Achievement Title"
        description="Achievement Description"
        layout="horizontal"
      />
    );
    expect(getByText("Achievement Title")).toBeTruthy();
    expect(getByText("Achievement Description")).toBeTruthy();
  });

  it("applies the correct background color when unlocked is true", () => {
    const { getByText } = render(
      <AchivementBox
        title="Achievement Title"
        description="Achievement Description"
        unlocked={true}
      />
    );
    const box = getByText("Achievement Title").parent.parent;
    expect(box.props.style.backgroundColor).toBeTruthy();
  });

  it("applies the default background color when unlocked is false", () => {
    const { getByText } = render(
      <AchivementBox
        title="Achievement Title"
        description="Achievement Description"
        unlocked={false}
      />
    );
    const box = getByText("Achievement Title").parent.parent;
    expect(box.props.style.backgroundColor).toBe("#FFFFFF"); // Assuming colors.menus is #FFFFFF
  });
});
